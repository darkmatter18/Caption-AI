name: GAE Deploy

on:
  push:
    branches:
      - master

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    
    env:
      working_dir: ./frontendui
    
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Node Setup
        uses: actions/setup-node@v1
        with:
          node-version: 12
      
      - name: NPM Install
        run: npm ci
        working-directory: ${{env.working_dir}}
      
      - name: Test Suites
        run: npm test
        working-directory: ${{env.working_dir}}
  
  build:
    name: Build
    needs: [test]
    runs-on: ubuntu-latest
    
    env:
      working_dir: ./frontendui
    
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Node Setup
        uses: actions/setup-node@v1
        with:
          node-version: 12
      
      - name: NPM Install
        run: npm ci
        working-directory: ${{env.working_dir}}
      
      - name: Build Frontend
        run: npm run build
        working-directory: ${{env.working_dir}}
      
      - name: Upload Frontend Artifacts
        uses: actions/upload-artifact@v2
        with:
         name: forntendbuild
         path: frontendui/build
  
  setup-build-deploy:
    name: Cleanup & Deploy
    needs: [test, build]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Download Frontend Artifacts
        uses: actions/download-artifact@v2
        with:
         name: forntendbuild
         path: WebBackendEngine/client
      
      - name: Cleanup
        run: |
         rm -r frontendui
         rm -r ImageCaptioning
         
      - name: Display structure of downloaded files
        run: ls -R

      # Setup and configure gcloud CLI
      - name: GAE Setup
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '290.0.1'
          project_id: ${{ secrets.PROJECT_ID }}
          service_account_key: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS}}
      
      - name: Download Models
        run: |
          wget ${{ secrets.MODEL_URL }}
          mkdir -p ./WebBackendEngine/models
          mv models.zip?dl=1 ./WebBackendEngine/models/models.zip
      
      - name: Unzip
        run: |
          unzip ./WebBackendEngine/models/models.zip -d ./WebBackendEngine/models/
          
      # Deploy App to App Engine
      - name: Deploy
        run: |
          gcloud app deploy --quiet
